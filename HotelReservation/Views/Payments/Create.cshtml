@model Entity.ViewModels.PaymentViewModel
@{
    ViewData["Title"] = "Create Payment";
    Layout = "~/Views/Shared/_LayoutHotel.cshtml";
}

<h1>Payment Details</h1>

<form asp-action="Create" method="post" class="needs-validation" novalidate>
    <div class="form-group">
        <label asp-for="ReservationId"></label>
        <input asp-for="ReservationId" class="form-control" readonly />
    </div>
    <div class="form-group">
        <label asp-for="PaymentDate"></label>
        <input asp-for="PaymentDate" class="form-control" readonly />
    </div>
    <div class="form-group">
        <label asp-for="Amount"></label>
        <input asp-for="Amount" id="amount" name="Amount" class="form-control" readonly />
    </div>
    <div class="form-group">
        <label asp-for="PaymentMethod"></label>
        <select asp-for="PaymentMethod" class="form-control">
            <option value="Credit Card">Credit Card</option>
            <option value="Debit Card">Debit Card</option>
            <option value="Paypal">Paypal</option>
        </select>
    </div>
    <div class="form-group">
        <label asp-for="CardHolderName"></label>
        <input asp-for="CardHolderName" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="CardNumber"></label>
        <input asp-for="CardNumber" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="ExpirationDate"></label>
        <input asp-for="ExpirationDate" class="form-control" type="date" />
    </div>
    <div class="form-group">
        <label asp-for="CVV"></label>
        <input asp-for="CVV" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Address"></label>
        <input asp-for="Address" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="TCKimlikNo"></label>
        <input asp-for="TCKimlikNo" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const urlParams = new URLSearchParams(window.location.search);
            const checkInDate = new Date(urlParams.get('checkInDate'));
            const checkOutDate = new Date(urlParams.get('checkOutDate'));
            const numberOfGuests = parseInt(urlParams.get('numberOfGuests'));
            const roomPrice = parseFloat('@Model.RoomPrice'); // Oda fiyatını Model'den alıyoruz ve float'a çeviriyoruz

            if (!isNaN(checkInDate) && !isNaN(checkOutDate) && numberOfGuests > 0 && !isNaN(roomPrice)) {
                const totalDays = Math.max((checkOutDate - checkInDate) / (1000 * 60 * 60 * 24), 1);
                const amount = (totalDays * roomPrice) * numberOfGuests;

                document.getElementById("amount").value = amount.toFixed(2);
            } else {
                alert("Geçersiz parametreler! Lütfen giriş ve çıkış tarihlerini ve kişi sayısını kontrol edin.");
            }
        });
    </script>
}
